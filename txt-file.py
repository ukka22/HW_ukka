# Открытие файла


# f=open("example.txt.txt", "r")        #example.txt.txt= имя открываемого файла
# "r" = режим открытия файла.

# Создадим текстовый файл example.txt и сохраним его в рабочей директории

# f=open("example.txt.txt", "r")  # открыть файл из рабочей директоиии в режиме чтения
# fp=open("C:/xyz.txt.txt", "r")  # открыть файл из любого каталога

# Вывод содержимого и информация о файле

# print(*f)  #выводим содержимое файла
# print(f)   #выводим обьект


# Закрыти файла

# способ №1
# f.close()          #метод close()

# способ №2
# try/finally, которое гарантирует, что если после открытия файла операции с ним приводят к исключениям,
# он закроется автоматически.


# f=open("example.txt.txt", "r")  #Файл нужно открыть до  try,
# потому что если инструкция open сама по себе вызовет ошибку,
# то файл не будет открываться для последующего закрытия
# try:
#     print(*f)  # работа с файлом
# finally:
#     f.close()


# способ  №3
# Инструкция with упрощает обработку исключений с помощью инкапсуляции начальных операций,
# а также задач по закрытию и очистке
# with open("example.txt.txt") as f:
#     print(*f) #работа с файлом


# Чтение файлов
# Функция read() используется для чтения содержимого файла после открытия его в режиме чтения (r).

# f=open("example.txt.txt", "r")
# print(f.read(7))                # f = объект файла
# 7 = количество символов, которые нужно прочитать.
# Если не указать, то файл прочитается целиком.
# print(f.read(7))                # если снова использовать read(), то чтение начнется с 8-го символа.


# Функция readline()
# используется для построчного чтения содержимого файла.
# Она используется для крупных файлов.
# С ее помощью можно получать доступ к любой строке в любой момент
# x= open("txt.txt","r")
# print(x.readline())    #прочитать первую строку
# print(x.readline())    #прочитать вторую строку
# x.close()


# x=open("txt.txt","r")
# print(x.readlines())    #прочитать все строки
# x.close()


# Чтение и запись файлов в Python
# Функция write()
# используется для записи в файлы Python, открытые в режиме записи.

# f=open("xyz.txt","w")  # открытие в режиме записи
# f.write("Hello \nWorld") #  запись текста в файл
# print(*f)
# f.close()                # закрытие файла


# Переименование файлов в Python
# Функция rename() используется для переименовывания файлов в Python.
# Для ее использования сперва нужно импортировать модуль os.


# import os
# os.rename("xyz.txt","abc.txt")   # ( файл, который нужно переименовать , новое имя файла)


# Вывод текущей директории
# os.getcwd() возвращает строку в Юникоде, представляющую текущий рабочий каталог.

# import os
# print("текущая директория:", os.getcwd())  # вывести текущую директоию


# Создание папки
# Для создания папки/каталога в любой операционной системе нужна следующая команда:

# import os
# # print("текущая директория:", os.getcwd()) #вывести текущую директорию
# # os.mkdir("folder")                        # создать пустой каталог (папку)
# После ее выполнения в текущем рабочем каталоге тут же появится новая папка
# с названием «folder».
# Если запустить ее еще раз, будет вызвана ошибка FileExistsError,
# потому что такая папка уже есть. Для решения проблемы нужно запускать команду только в том случае,
# если каталога с таким же именем нет

# Изменение директории


import os
# os.chdir("folder")                                                  # изменение текущего каталого на "folder"
# print("текущая директория изменилась на folder:", os.getcwd())      # вывести текущую директоию
# os.chdir("..")                                                      # вернуться в предыдущую директорию
# os.makedirs("nested1/nested2/nested3")                              # сделать несколько вложенных папок


# Удаление папок, файлов
import os

# os.remove("abc.txt")   # удвляем файл

# import os
# os.rmdir("folder")   # удаляем папку


# import os
# os.removedirs("nested1/nested2/nested3") # удалить вложенные папки


# Задача №1
# В файле, в одну строку записаны слова и числа через пробел или _
# найти сумму всех чисел.
#
# with open("task.txt") as f:
#     y = f.readlines()
#     print(y)
# for i in y:
#     i = i.replace("_", " ")
#     j = i.split(" ")
# print(j)
# sum = 0
# for i in j:
#     if i.isdigit():
#         i=int(i)
#         sum += i
# print(sum)
